--- unittest/test_utils/admin_api_test.cc
+++ unittest/test_utils/admin_api_test.cc
@@ -213,7 +213,7 @@ void Admin_api_test::add_member_state_query(
 }
 
 void Admin_api_test::add_md_group_name_query(
-    std::vector<tests::Fake_result_data> *data,
+    std::vector<testing::Fake_result_data> *data,
     const std::string &value) {
   data->push_back({
     "SELECT JSON_UNQUOTE(JSON_EXTRACT(attributes, "
@@ -221,7 +221,7 @@ void Admin_api_test::add_md_group_name_query(
     "FROM mysql_innodb_cluster_metadata.replicasets "
     "WHERE replicaset_id = 1",
     {"group_replication_group_name"},
-    {Type::VarString},
+    {mysqlshdk::db::Type::VarString},
     {
       {value}
     }
@@ -229,14 +229,14 @@ void Admin_api_test::add_md_group_name_query(
 }
 
 void Admin_api_test::add_get_replication_group_state_online_rw_query(
-    std::vector<tests::Fake_result_data> *data,
+    std::vector<testing::Fake_result_data> *data,
     const std::string &member_id) {
   data->push_back({
     "SELECT @@server_uuid, VARIABLE_VALUE FROM "
     "performance_schema.global_status WHERE VARIABLE_NAME "
     "= 'group_replication_primary_member';",
     {"@@server_uuid", "VARIABLE_VALUE"},
-    {Type::VarString, Type::VarString},
+    {mysqlshdk::db::Type::VarString, mysqlshdk::db::Type::VarString},
     {
       {member_id.c_str(), member_id.c_str()}
     }
@@ -246,7 +246,7 @@ void Admin_api_test::add_get_replication_group_state_online_rw_query(
     "SELECT MEMBER_STATE FROM performance_schema.replication_group_members "
     "WHERE MEMBER_ID = '" + member_id + "'",
     {"MEMBER_STATE"},
-    {Type::VarString},
+    {mysqlshdk::db::Type::VarString},
     {
       {"ONLINE"}
     }
@@ -257,7 +257,7 @@ void Admin_api_test::add_get_replication_group_state_online_rw_query(
     "AS UNREACHABLE,  COUNT(*) AS TOTAL FROM "
     "performance_schema.replication_group_members",
     {"SIGNED", "UNREACHABLE"},
-    {Type::Long, Type::Long},
+    {mysqlshdk::db::Type::Long, mysqlshdk::db::Type::Long},
     {
       {"0", "2"}
     }
@@ -265,7 +265,7 @@ void Admin_api_test::add_get_replication_group_state_online_rw_query(
 }
 
 void Admin_api_test::add_get_cluster_matching_query(
-    std::vector<tests::Fake_result_data> *data,
+    std::vector<testing::Fake_result_data> *data,
     const std::string &cluster_name) {
   data->push_back({
     "SELECT cluster_id, cluster_name, default_replicaset, description, "
@@ -273,8 +273,9 @@ void Admin_api_test::add_get_cluster_matching_query(
     "WHERE cluster_name = '" + cluster_name + "'",
     {"cluster_id", "cluster_name", "default_replicaset", "description",
      "options", "attributes"},
-    {Type::Long, Type::VarString, Type::Long, Type::Blob,
-     Type::Json, Type::Json},
+    {mysqlshdk::db::Type::Long, mysqlshdk::db::Type::VarString,
+     mysqlshdk::db::Type::Long, mysqlshdk::db::Type::Blob,
+     mysqlshdk::db::Type::Json, mysqlshdk::db::Type::Json},
     {
       {"1", cluster_name.c_str(), "1", "Test Cluster", "null",
         "{\"default\": true}"}
@@ -283,14 +284,14 @@ void Admin_api_test::add_get_cluster_matching_query(
 }
 
 void Admin_api_test::add_get_replicaset_query(
-      std::vector<tests::Fake_result_data> *data,
+      std::vector<testing::Fake_result_data> *data,
       const std::string &replicaset_name) {
   data->push_back({
     "SELECT replicaset_name, topology_type FROM "
     "mysql_innodb_cluster_metadata.replicasets WHERE "
     "replicaset_id = 1",
     {"replicaset_name", "topology_type"},
-    {Type::String, Type::Enum},
+    {mysqlshdk::db::Type::String, mysqlshdk::db::Type::Enum},
     {
       {"default", "pm"}
     }
@@ -298,7 +299,7 @@ void Admin_api_test::add_get_replicaset_query(
 }
 
 void Admin_api_test::add_is_instance_on_rs_query(
-      std::vector<tests::Fake_result_data> *data,
+      std::vector<testing::Fake_result_data> *data,
       const std::string &replicaset_id,
       const std::string &instance_address) {
   data->push_back({
@@ -306,7 +307,7 @@ void Admin_api_test::add_is_instance_on_rs_query(
     "WHERE replicaset_id = " + replicaset_id + " AND "
     "addresses->'$.mysqlClassic' = '" + instance_address + "'",
     {"count"},
-    {Type::Long},
+    {mysqlshdk::db::Type::Long},
     {
       {"1"}
     }

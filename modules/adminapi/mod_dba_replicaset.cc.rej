--- modules/adminapi/mod_dba_replicaset.cc
+++ modules/adminapi/mod_dba_replicaset.cc
@@ -675,7 +675,7 @@ shcore::Value ReplicaSet::rejoin_instance(const shcore::Argument_list &args) {
                instance_address.c_str());
       shcore::Argument_list slave_args;
       slave_args.push_back(shcore::Value(instance_def));
-      session = mysqlsh::connect_session(slave_args,
+      session = mysqlsh::Shell::connect_session(slave_args,
                                          mysqlsh::SessionType::Classic);
       classic = dynamic_cast<mysqlsh::mysql::ClassicSession*>(session.get());
     } catch (std::exception &e) {
@@ -694,7 +694,7 @@ shcore::Value ReplicaSet::rejoin_instance(const shcore::Argument_list &args) {
           "registered in the ReplicaSet's Metadata: possible split-brain "\
           "scenario. Please remove the instance from the cluster.";
 
-      session->close(shcore::Argument_list());
+      session->close();
 
       throw shcore::Exception::runtime_error(nice_error);
     }
@@ -1590,7 +1590,7 @@ shcore::Value ReplicaSet::force_quorum_using_partition_of(const shcore::Argument
                instance_address.c_str());
       shcore::Argument_list slave_args;
       slave_args.push_back(shcore::Value(instance_def));
-      session = mysqlsh::connect_session(slave_args,
+      session = mysqlsh::Shell::connect_session(slave_args,
                                          mysqlsh::SessionType::Classic);
       classic = dynamic_cast<mysqlsh::mysql::ClassicSession*>(session.get());
     } catch (std::exception &e) {
@@ -1610,7 +1610,7 @@ shcore::Value ReplicaSet::force_quorum_using_partition_of(const shcore::Argument
           "registered in the ReplicaSet's Metadata: possible split-brain "\
           "scenario.";
 
-      session->close(shcore::Argument_list());
+      session->close();
 
       throw shcore::Exception::runtime_error(nice_error);
     }
